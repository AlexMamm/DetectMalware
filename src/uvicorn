#!/usr/local/bin/python
# -*- coding: utf-8 -*-
import re
import sys
import torch
from uvicorn.main import main


class CNN(torch.nn.Module):
    def __init__(self, classes):
        super(CNN, self).__init__()

        self.convolutional_layers = torch.nn.Sequential(
            torch.nn.Conv2d(in_channels=1, out_channels=32, kernel_size=3, stride=2),
            torch.nn.ReLU(),
            torch.nn.MaxPool2d(kernel_size=3, stride=2),
            torch.nn.Conv2d(in_channels=32, out_channels=64, kernel_size=3, stride=2),
            torch.nn.ReLU(),
            torch.nn.MaxPool2d(kernel_size=3, stride=2),
            torch.nn.Conv2d(in_channels=64, out_channels=128, kernel_size=3, stride=2),
            torch.nn.ReLU(),
            torch.nn.MaxPool2d(kernel_size=3, stride=2)
        )
        self.dense_layers = torch.nn.Sequential(
            torch.nn.Dropout(0.2),
            torch.nn.Linear(128 * 3 * 3, 256),
            torch.nn.ReLU(),
            torch.nn.Dropout(0.2),
            torch.nn.Linear(256, 128),
            torch.nn.ReLU(),
            torch.nn.Dropout(0.2),
            torch.nn.Linear(128, classes)
        )

    def forward(self, X):
        out = self.convolutional_layers(X)
        out = out.view(out.size(0), -1)
        out = self.dense_layers(out)
        return out
        

if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])
    sys.exit(main())
